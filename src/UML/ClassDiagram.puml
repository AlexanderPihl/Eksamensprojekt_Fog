@startuml

package "DBAccess" #fa9696 {

Class DataMapper{
{static}+void createUser(User)
{static}+User login(email, password)
{static}+Int createUserQuote(name, address, zipcodeCity, phone, email, comments)
{static}+Int createQuoteOrder(user_proposition_id, oc_width, oc_length, ots_length, ots_width, ots_length, roof_type, roof_material, pitch)
{static}+createQuoteOrderline(orders_id, item_list_id, quantity, total_price)
{static}+deleteQuote(quoteID)
{static}+List <Item> getItemList()
{static}+List <UserProposition> getUserProposition(userID)
{static}+List <UserProposition> getAllUserProposition()
{static}+void updateStatus(orderID, status)
{static}+updateQuoteUserProposition(userID, name, address, zipcodeCity, phone, email, comments)
{static}+void updateQuoteOrders(orderID, oc_width, oc_length, ots_width, ots_length, roof_type, roof_type, roof_material, pitch)
{static}+List <CarportWidth> getCarportWidth()
{static}+List <CarportLength> getCarportLength()
{static}+List <RoofFlat> getRoofFlat()
{static}+List <RoofRaised> getRoofRaised()
{static}+List <RoofDegree> getRoofDegree()
{static}+List <ShedWidth> getShedWidth()
{static}+List <ShedLength> getShedLength()
{static}+List <BeamDimensionLight> getBeamDimensionLight()
{static}+List <BeamDimensionHeavy> getBeamDimensionHeavy()
{static}+Map <Integer, Double> getPitchFactor()
{static}+List <StandardDimensions> getStandardDimensions()
}

class Connector{
{static}-String URL
{static}-String USERNAME
{static}-String PASSWORD
{static}-Connection singleton
{static}+Connection connection()
{static}+void setConnection(con)
}

}
/'
Comment
'/

package "FunctionLayer" #96c4fa {

LogicFacade <--> DataMapper
Connector <--> DataMapper
DataMapper <--> User

class BeamDimensionHeavy{
-String beamDimensionHeavy
-double beamSpacingHeavy
}

class BeamDimensionLight{
-String beamDimensionLight
-double beamSpacingLight
}

class CarportLength{
-int carportLengthOptions
}

class CarportWidth{
-int carportWidthOption
}

class CreateCalculatedQuote{
}


class Item{
-int itemListID
-String materialType
-String material
-String description
-int quantity
-String unit
-double pricePrUnit
+Item(itemListID, materialType, material, description, quantity, unit, pricePrUnit)
}


class LogicFacade {
{static}+User login(email, password)
{static}+User createUser(email, password)

{static}+int createUserQuote(name, adress, zipcodeCity, phone, email, comments)
{static}+int createUserQuoteOrder(user_proposition_id, oc_width,oc_length, ots_width, ots_length, roof_type, roof_material, pitch)
{static}+void createQuoteOrderline(orders_id, material_type, material, description, length, quantity, unit, total_price)
{static}+void deleteQuote(quoteID)
{static}+List<UserProposition> getUserProposition()
{static}+List<UserProposition> getAllUserPropositions()
{static}+void updateStatus(orderID, status)
{static}+void updateQuoteUserProposition(orderID, name, address, zipcodeCity, phone, email, comments)
{static}+void updateQuoteOrders(orderID, oc_width,oc_length, ots_width, ots_length, roof_type, roof_material, pitch)
{static}+List<CarportWidth> getCarportWidth()
{static}+List<CarportLength> getCarportLength()
{static}+List<RoofFlat> getRoofFlat()
{static}+List<RoofRaised> getRoofRaised()
{static}+List<RoofDegree> getRoofDegree()
{static}+List<ShedWidth> getShedWidth()
{static}+List<ShedLength> getShedLength()
{static}+List<BeamDimensionLight> getBeamDimensionLight()
{static}+List<BeamDimensionHeavy> getBeamDimensionHeavy()
{static}+Map<Integer,Double> getPitchFactor()
{static}+List <StandardDimensions> getStandardDimensions()
{static}+List <Item> getItemList()
}

class LoginSampleException extends Exception{
+LoginSampleException(msg)
}

class RoofDegree{
-int RoofDegreeOption
+roofDegree(RoofDegreeOption)
}

class RoofFlat{
-String roofFlatOption
+RoofFlat(roofFlatOption)
}

class roofRaised{
+String RoofRaisedOption
+RoofRaised(roofRaisedOptions)
}

class ShedLength{
+ShedLength( shedLengthOption)
}

class ShedWidth{
+ShedWidth( shedWidthOption)
}

class User{
-String email
-String id
-String password
-String role
+User(email, password, role)
}

class BeamDimensionHeavy{
+BeamDimensionHeavy(beamDimensionHeavy, beamSpacingHeavy)
}

class BeamDimensionLight{
+BeamDimensionLight(beamDimensionLight, beamSpacingLight)
}

class CarportLength{
+CarportLength(carportLengthOption)
}

class CarportWidth{
+CarportWidth(carportWidthOption)
}

package "Calculations" #96c4fa {

class CarportCalculation{
-int orderID
-int bottomLathSpan
-int bottomLaths
-double topLathGap
-double avgLathSpan
-double roofTileLength
-double roofTileWidth
-double roofTrapezLength
-double roofTrapezWidth
-String shedCladdingBoardDim
-String beamDimensionHeavy
-String beamDimensionLight
-int raftType
-int shedWallLathType
-int shedCladdingBoardType
-int roofLathType
-int supportStrapType
-int roofCladType
-int sternBoardType
-int beamType
-boolean raisedRoof
-int carportLength
-int carportWidth
-int customerRoofAngle
-int shedLength
-int shedWidth
-double raftLength
-int noOfRafts
-double raftDistance
-double avgRaftDistance
-String raftDimension
-double horizontalRaftLength
-double verticalRaftLength
-int noOfHorizontalRafts
-int noOfVerticalRafts
-int noOfShedWallLaths
-double shedWallLathsTotalLength
-int noOfCladdingBoardsTotal
-double claddingBoardOverlap
-int noOfCladdingBoardsWidth
-int noOfCladdingBoardsLength
-double calcRoofHeight
-int noOfLaths
-double lathSpan
-double supportingStrapLength
-int totalNumberOfRoofTiles
-int totalNumberOfRoofTrapezPlates
-String roofCladdingType
-int calcAngle
-boolean roofHeavy
-double sternBoardLength
-String beamDimension
-int noOfBeams

-List <BeamDimensionHeavy> raftStringHeavy
-List <BeamDimensionLight> raftStringHeavy
+Arraylist<Arraylist> raftDistancesLight
+Arraylist<Arraylist> raftDistancesHeavy
-List<StandardDimensions> standardDimensions
-Map<Integer, Double> angleAndFactor

-calcRaftLength(carportWidth, customerRoofAngle,calculateRoofAngle)
-calcShedCladding(shedWidth, shedLength)
-calculateShedWallLaths()
-calcRoofCladdingArea(carportLength, calcRaftLength, ROOF_TILE_LENGTH, ROOF_TILE_WIDTH, ROOF_TRAPEZ_LENGTH, ROOF_TRAPEZ_WIDTH, customerRoofAngle)
-calcNoOfBeamsAndDim(shedLength)
-calculateSupportingStrap(carportWidth, carportLength)
-calculateRoofAngle(customerRoofAngle)
-calcSternBoardLength(RaftLength)
-noOfRafts(carportLength, raftDistance)
-calcRoofHeight(customerRoofAngle, carportWidth)
-calcRoofLaths(calcRaftLength)
}

class StandardDimensions{
-int bottom_lathspan
-int bottom_laths
-double top_lath_gap
-double avg_lath_span
-double roof_tile_length
-double roof_tile_width
-double roof_trapez_length
-double roof_trapez_width
-String shed_claddeing_board_dim
-String beam_dimension_heavy
-String beam_dimension_light

+StandardDimensions(bottom_lathspan,bottom_laths,top_lath_gap,avg_lath_span,roof_tile_length, roof_tile_width, roof_trapez_length, roof_trapez_width, shed_claddeing_board_dim, beam_dimension_heavy, beam_dimension_light)
}

class PriceCalculator{
-double totalRaftLength
-double totalRaftPrice
-double totalShedWallLathLength
-double totalShedCladdingBoardLength
-double totalShedCladdingBoardPrice
-double totalShedWallLathPrice
-double totalLathsLength
-double totalSupportingStrapLength
-int totalNumberOfRoofTiles
-int totalNumberOfRoofTrapezPlates
-double totalRoofLathPrice
-double totalSupportingStrapPrice
-double totalRoofCladPrice
-double totalSternBoardLength
-double totalNoOfBeamLength
-double totalSternBoardPrice
-double totalBeamPrice
-double totalCarportPrice

+PriceCalculator(CarportCalculation cpCalc)
-void calculateCarportTotalPrice(raft, shedCladBoard, shedLath, roofFlat, supportStrap, roofClad, sternBoard, beam)
-Item itemSearch(int itemID)
}

}

package "Drawings" #96c4fa {
class Svg{
-double carportWidth
-double carportLength
-double carportX
-double carportY
-double noOfRafts
-double raftDistance
-double raftLength
-double raftWidth
-double raftX
-double raftY
-double shedLength
-double shedWidth
-double shedX
-double shedY
-double noOfLaths
-double lathLength
-double lathWidth
-double lathSpan
-double lathX
-double lathY
-double noOfBeams
-double beamDistance
-double beamHight
-double beamWidth
-double beamX
-double beamY
-double roofBargeHeigt
-double roofBargeWidth
-double roofBargeX
-double roofBargeY
-double windCrossX1
-double windCrossX2
-double windCrossY1
-double windCrossY2
-double arrowLineX1
-double arrowLineX2
-double arrowLineY1
-double arrowLineY2
-double textX
-double textY
-int text

-Stringbuilder svg
-String headerTemplate
-String rectTemplate
-String lineTemplate
-String dotLineTemplate
-String lowerTextTemplate
-String upperTextTemplate
+Svg(height, width, viewbox, x, y)
+Svg(x1, y1, x2, y2)
+Svg(x, y, text)

+void addCarport()

+ toString()
}

class SvgSideways{
-double carportLength
-double carportX
-double carportY
-double noOfRafts
-double raftDistance
-double raftHeight
-double raftWidth
-double raftX
-double raftY
-double roofHeigt
-int pitch
-double roofLength
-double roofX
-double roofY
-double roofRidgeHeight
-double roofRidgeLength
-double RidgeX
-double RidgeY
-double roofBargeHeigt
-double roofBargeLength
-double roofBargeX
-double roofBargeY
-double fasciaBoardHeight
-double fasciaBoardLength
-double fasciaBoardX
-double fasciaBoardY
-double shedLength
-double shedX
-double shedX2
-double shedY
-double shedCladdingWidth
-double shedCladdingHeight
-double noOfCladsSideways
-double noOfLaths
-double lathWidth
-double lathLength
-double lathSpan
-double lathX
-double lathY
-double noOfBeams
-double beamlength
-double beamWidth
-double beamX
-double beamY
-double roofTileHeight
-double roofTileWidth
-double roofTileColumns
-double roofTileRows
-double roofTilesX1
-double roofTilesY1
-double roofTilesPx
-double roofTilesPy
-double carportHeight = (roofHeigt+beamlength+5)

-Stringbuilder svgSideways
-String headerTemplate
-String rectTemplate
-String rectTemplateRoof
-String rectTemplateShed
-String rectTemplateShed2
-String rectTemplatelaths
-String rectTemplateTile
-String rectTemplateHiddenTile
-String lineTemplate
-String lineNoArrowTemplate
-String dotLineTemplate
-String lowerTextTemplate
-String upperTextTemplate
-String roofTileTemplate1
-String roofTileTemplate2
-String roofTileTemplate

+SvgSideways(height, width, viewbox, x, y)
+SvgSideways(x1, y1, x2, y2)
+SvgSideways(x, y, text)

+void addRoof()
+void addCarport()
+void addLines()
+void addRoofTiles()

+ toString()
}
}

package "Proposition" #96c4fa {

class UserProposition{
-int user_proposition_id
-String name
-String address
-String zipcodeCity
-int phone
-String email
-String comments
-int orders_id
-String order_date
-String status
-int carport_width
-int carport_length
-int shed_width
-int shed_length
-String roof_type
-String roof_material
-int pitch

+UserProposition(user_proposition_id, name, address, zipcodeCity, phone, email, comments, orders_id,order_date, status, carport_width, carport_length, shed_width, shed_length, roof_type, roof_material, pitch)
}

class CustomerQuote{
-int customerId
-String name
-String address
-String zipcodeCity
-int phone
-String email
-String comment
+CustomerQuote(customerID)
}

}
}

package "PresentationLayer" #78d683 {

FrontController --|> Command

class Command{
{Static}-HashMap: String, command
{Static}-void initCommands()
{Static}+Command from(request)
{abstract} String execute()
}

class CarportCalcPage extends Command{
+String execute(request, response)
}

class FrontController extends HttpServlet{
#void processRequest(request, response)
#void doGet(request, response)
#void doPost(request, response)
#void getServletInfo()
}

class Login extends Command{
+String execute(request,response)
}

class Redirect extends Command{
+String execute(request,response)
}

class Register extends Command{
+String execute(request,response)
}

class UnknownCommand extends Command{
+String execute(request,response)
}

class Drawing extends Command{
+String execute(request,response)
}

class AdminRejectQuote extends Command{
+String execute(request,response)
}

class CarportCustomize extends Command{
+String execute(request,response)
}

class DrawingSideways extends Command{
+String execute(request,response)
}

class QuoteView extends Command{
+String execute(request,response)
}

class RejectQuote extends Command{
+String execute(request,response)
}

class Carportcustomize extends Command{
{Static}+String execute(request,response)
{Static}+List<CarportWidth> carportWidth
{Static}+List<CarportLength> carportLength
{Static}+List<RoofFlat> roofFlat
{Static}+List<RoofRaised> roofRaised
{Static}+List<RoofDegree> roofDegree
{Static}+List<ShedWidth> shedWidth
{Static}+List<ShedLength> shedLength
}

class DrawingSideways extends Command{
 {Static}+String execute(request,response)
}

}

@enduml